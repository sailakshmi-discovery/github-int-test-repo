# First 
# 1. Go to https://wbdstaging.pagerduty.com/service-directory/{{SERVICE_ID}}/integrations
# 2. Add github as a integration 
# 3. Copy Integration Key
# 4. Set integration key as a repository secret PAGERDUTY_CHANGE_INTEGRATION_KEY
#  ie. gh secret set PAGERDUTY_CHANGE_INTEGRATION_KEY --repos wbd-streaming/dac-test-repo
# 5. Copy this workflow in .github/workflows
# 6. Commit changes
# 7. Go to https://wbdstaging.pagerduty.com/service-directory/{{SERVICE_ID}}/activity
# 8. You'll see changes in the recent changes section
on:
  workflow_call:
    inputs:      
      changed_files:
        description: 'Changed files in the service repo'
        required: true        
        type: string
  
jobs:
  send-pagerduty-change-event:
    runs-on: ubuntu-latest
    name: Sending PagerDuty Change Event
    steps:
      - name: Print int key
        run: |
          echo "int key-----"
          echo "${{ inputs.key }}"  
          
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install pandas
      
      - name: Run python script for fetching github integration key based on the folder changed 
        id: script_output
        run: |
          service_name=str(${{inputs.changed_files}}).split('/')[1]+' - High'
          url = "https://api.pagerduty.com/services"
          headers = {
              "Accept": "application/json",
              "Content-Type": "application/json",
              "Authorization": "Token token=u+4hg4fVR--rvQpC8PLw"
          }
      
          limit = 25
          offset = 0
          result = []
          while True:
            params_list = {'offset' : offset, 'limit': limit}
            response = requests.get(url, headers=headers, params=params_list).json()
    
            for service in response['services']:             
                if service_name==service['name']:
                    service_id=service['id']            
                    for integration in service['integrations']:
                        if integration['summary']=='GitHub':
                            integration_id=integration['id']
                            print(service_id)
                            print(integration_id)        
                            break   
                                 
                if response['more'] == True:
                    offset = offset + limit
                else:
                    break

   
          url = "https://api.pagerduty.com/services/"+service_id+"/integrations/"+integration_id      
          response = requests.get(url, headers=headers).json()              
          integration_key=response['integration']['integration_key']
          print(integration_key)          
          echo "::set-output name=my_variable::$integration_key"       
        
      - name: Check if previous steps failed
        id: check-failure
        if: ${{ failure() }}
        run: echo "::set-output name=failed::true"

      - name: Create a change event        
        uses: PagerDuty/pagerduty-change-events-action@master
        with:
          integration-key: ${{ steps.script_output.outputs.my_variable }}        
      
